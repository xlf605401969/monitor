<Window x:Class="Monitor2.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Monitor2"
        xmlns:models="clr-namespace:Monitor2.Models"
        xmlns:vm="clr-namespace:Monitor2.ViewModels"
        mc:Ignorable="d"
        Title="Monitor" Height="600" Width="900"
        ResizeMode="CanResize"
        >
    <Window.Resources>
        <models:ValueChangedConverter x:Key="GetColor"></models:ValueChangedConverter>
        <vm:ConnectStatusConverter x:Key="GetConnectStatusColor"></vm:ConnectStatusConverter>
        <vm:DeviceStatusConverter x:Key="GetDeviceStatusColor"></vm:DeviceStatusConverter>
        <vm:DeviceModeConverter x:Key="FloatToInt"></vm:DeviceModeConverter>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="OptionMark.Static.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="OptionMark.Static.Border" Color="#FF707070"/>
        <Style x:Key="OptionMarkFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Background" Color="#FFF3F9FF"/>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Border" Color="#FF5593FF"/>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Glyph" Color="#FF212121"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Background" Color="#FFE6E6E6"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Border" Color="#FFBCBCBC"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Glyph" Color="#FF707070"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Background" Color="#FFD9ECFF"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Border" Color="#FF3C77DD"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Glyph" Color="#FF212121"/>
        <SolidColorBrush x:Key="OptionMark.Static.Glyph" Color="#FF212121"/>
        <Style x:Key="CheckBoxStyle1" TargetType="{x:Type CheckBox}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource OptionMark.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource OptionMark.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="checkBoxBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" Background="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <Grid x:Name="markGrid">
                                    <Border x:Name="ShadowBorder" BorderBrush="Gray" BorderThickness="3" Background="#FF4EFF4E"> 
                                        <Grid>
                                        <Rectangle x:Name="indeterminateMark" Fill="{StaticResource OptionMark.Static.Glyph}" Margin="2" Opacity="0"/>
                                        <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        </Grid>
                                    </Border>
                                </Grid>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                                <Setter Property="Padding" Value="4,-1,0,0"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Border}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Border}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Border}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
                                <Setter Property="BorderBrush" TargetName="ShadowBorder" Value="Black"/>
                                <Setter Property="Background" TargetName="ShadowBorder" Value="Red"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"
                           />
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="700"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <GroupBox x:Name="groupBox" Header="CAN控制器参数" Margin="10,10,10,10"
                  Grid.Row="0" Grid.Column="0">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition Height="5"/>
                    <RowDefinition Height="0"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="1.5*"/>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="1.5*"/>
                    <ColumnDefinition Width="0.8*"/>
                    <ColumnDefinition Width="1.2*"/>
                    <ColumnDefinition Width="0.8*"/>
                    <ColumnDefinition Width="1.5*"/>
                    <ColumnDefinition Width="1.3*"/>
                </Grid.ColumnDefinitions>
                <Label Grid.Row="0" Grid.Column="0" Content="设备:"
                       HorizontalAlignment="Right"/>
                <ComboBox Name="DeviceSelection"
                          Grid.Row="0" Grid.Column="1"
                          IsEditable="False"
                          SelectedIndex="1"
                          SelectionChanged="DeviceSelection_SelectionChanged">
                    <ComboBoxItem>USB_CAN</ComboBoxItem>
                    <ComboBoxItem>USB_CAN2</ComboBoxItem>
                </ComboBox>
                <Label Grid.Row="0" Grid.Column="2" Content="索引:"
                       HorizontalAlignment="Right"/>
                <ComboBox Name="IndexSelection"
                          Grid.Row="0" Grid.Column="3"
                          IsEditable="False"
                          SelectedIndex="0"
                          SelectionChanged="IndexSelection_SelectionChanged">
                    <ComboBoxItem>0</ComboBoxItem>
                    <ComboBoxItem>1</ComboBoxItem>
                    <ComboBoxItem>2</ComboBoxItem>
                    <ComboBoxItem>3</ComboBoxItem>
                </ComboBox>
                <Label Grid.Row="0" Grid.Column="4" Content="端口:"
                       HorizontalAlignment="Right"/>
                <ComboBox Name="PortSelection"
                          Grid.Row="0" Grid.Column="5"
                          IsEditable="False"
                          SelectedIndex="0"
                          SelectionChanged="PortSelection_SelectionChanged">
                    <ComboBoxItem>CAN1</ComboBoxItem>
                    <ComboBoxItem>CAN2</ComboBoxItem>
                </ComboBox>
                <Label Grid.Row ="0" Grid.Column="6" Content="模式:"
                       HorizontalAlignment="Right"/>
                <ComboBox Name="ModeSelection"
                          Grid.Row="0" Grid.Column="7"
                          IsEditable="False"
                          SelectedIndex="0"
                          SelectionChanged="ModeSelection_SelectionChanged">
                    <ComboBoxItem>正常</ComboBoxItem>
                    <ComboBoxItem>监听</ComboBoxItem>
                    <ComboBoxItem>自测</ComboBoxItem>
                </ComboBox>
                <Label Grid.Row="2" Grid.Column="4" Content="波特率:"
                       HorizontalAlignment="Right"/>
                <ComboBox Name="BaudRateSelection"
                         Grid.Row="2" Grid.Column="5"
                         />
                <Label Grid.Row="2" Grid.Column="6" Content="ID:"
                       HorizontalAlignment="Right"/>
                <TextBox Name="IDInput" 
                         Grid.Row="2" Grid.Column="7"
                         Text="0x00000100"
                         TextChanged="IDInput_TextChanged"/>
                <Label Grid.Row="2" Grid.Column="0" Content="AccCode:"
                       HorizontalAlignment="Right"/>
                <TextBox Name="AccCodeInput"
                         Grid.Row="2" Grid.Column="1"
                         Text="0x00000000"/>
                <Label Grid.Row="2" Grid.Column="2" Content="AccMask:"
                       HorizontalAlignment="Right"/>
                <TextBox Name="AccMaskInput"
                         Grid.Row="2" Grid.Column="3"
                         Text="0xffffffff"/>
                <Button Name="ConnectDeviceButton" Content="连接"
                        Grid.Row="0" Grid.RowSpan="1" Grid.Column="8"
                        Margin="5,0,0,0" Click="ConnectDeviceButton_Click"
                        Foreground="Green"/>
                <Button Name="StartCANButton" Content="启动"
                        Grid.Row="3" Grid.Column="8"
                        Margin="5,0,0,0" Click="StartCANButton_Click"
                        />
            </Grid>
        </GroupBox>
        <GroupBox Header="控制器参数" Margin="10,10,10,10"
                  Grid.Row="0" Grid.RowSpan="3" Grid.Column="1">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="30"/>
                </Grid.RowDefinitions>
                <ListView Name="ParasListView" ItemsSource="{Binding}"
                          Grid.Row="0" Margin="0,0,0,0">
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <Grid Margin="0,0,0,0" Width="130">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="1.3*"/>
                                </Grid.ColumnDefinitions>
                                <Label Content="{Binding Name}" 
                                   Grid.Column="0" Margin="0,0,0,0"
                                   HorizontalAlignment="Center"/>
                                <TextBox Text="{Binding Value}" 
                                   Grid.Column="1" Margin="0,0,0,0"
                                   Foreground="{Binding Path=IsValueChanged, Converter={StaticResource GetColor}}"
                                   />
                            </Grid>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
                <Grid Height="Auto"
                      Grid.Row="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Button Name="UpdateParaListButton" Content="发送"
                            Grid.Column="0" Margin="0,0,0,0"
                            Click="UpdateParaListButton_Click" Height="30" VerticalAlignment="Top"/>
                    <Button Name="ReadParaListButton" Content="读取"
                            Grid.Column="1" Margin="0,0,0,0"
                            Click="ReadParaListButton_Click"/>
                </Grid>
            </Grid>
        </GroupBox>
        <Grid Grid.Row="1" Grid.Column="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
        </Grid>
        <GroupBox Header="控制面板"
            Grid.Row="2" Grid.Column="0"
                  Margin="10,10,10,10">
            <TabControl>
                <TabItem Header="控制"
                         Name="ControlTabView">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="2.5*"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <GroupBox Header="控制"
                                  Grid.Column="0" Grid.Row="0"
                                  Margin="5,5,5,5">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <Label Content="运行模式:" HorizontalAlignment="Right"/>
                                <ComboBox Name="RunModeSelection"
                                          DataContext="{Binding ControlParasList[4]}"
                                          Grid.Column="1"
                                          Grid.ColumnSpan="2"
                                          Margin="20,0,20,0"
                                          SelectedIndex="{Binding Path=Value, Converter={StaticResource FloatToInt}}" SelectionChanged="RunModeSelection_SelectionChanged" >
                                    <ComboBoxItem>转速模式</ComboBoxItem>
                                    <ComboBoxItem>转矩模式</ComboBoxItem>
                                    <ComboBoxItem>定位模式</ComboBoxItem>
                                    <ComboBoxItem>发电模式</ComboBoxItem>
                                    <ComboBoxItem>母线放电</ComboBoxItem>
                                </ComboBox>
                                <Button Name="RunModeButton" Content="确定"
                                        Visibility="Hidden"
                                        Grid.Column="2" Margin="10,0,10,0"
                                        Click="RunModeButton_Click"/>
                                <StackPanel Grid.Row="1" VerticalAlignment="Center">
                                    <CheckBox Name="StatusCheckSelection" Content="自动查询"
                                              Grid.Row="1" Grid.Column="0" 
                                              VerticalAlignment="Center" 
                                              HorizontalAlignment="Right"
                                              Visibility="Visible"
                                              IsChecked="{Binding IsAutoCheckStatus}"/>
                                    <Button Name="StatusCheckButton" Content="查询"
                                            Click="StatusCheckButton_Click"/>
                                </StackPanel>
                                <Label Content="连接状态:"
                                       Grid.Column="1" Grid.Row="1"
                                       HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                <Ellipse Name="ConnectStatusCircle" Width="30" Height="30"
                                         Grid.Row="1" Grid.Column="2"
                                         Margin="0,10,0,10"
                                         VerticalAlignment="Center"
                                         Fill="{Binding Path=ConnectStatus, Converter={StaticResource GetConnectStatusColor}}"/>
                                <Label Content="运行状态:"
                                       Grid.Column="3" Grid.Row="1"
                                       HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                <Ellipse Name="RunStatusCircle" Width="30" Height="30"
                                         Grid.Row="1" Grid.Column="4"
                                         Margin="0,10,0,10"
                                         VerticalAlignment="Center"
                                         Fill="{Binding Path=DeviceStatus, Converter={StaticResource GetDeviceStatusColor}}"/>
                                <Button Name="MotorStartButton" Content="启动"
                                        Grid.Row="0" Grid.Column="3"
                                        Margin="10,0,10,0"
                                        Click="MotorStartButton_Click"/>
                                <Button Name="MotorStopButton" Content="停止"
                                        Grid.Row="0" Grid.Column="4"
                                        Margin="10,0,10,0"
                                        Click="MotorStopButton_Click"/>
                                <StackPanel Name="SwitchStackPanel" Grid.Row="2" Grid.ColumnSpan="5" Orientation="Horizontal" HorizontalAlignment="Center" >
                                    <CheckBox Name="Switch1" Content="DC继电器"
                                              Click="Switch1_Click" Style="{DynamicResource CheckBoxStyle1}"
                                              IsChecked="{Binding DCRelay.Value}"/>
                                    <CheckBox Name="Switch2" Content="负载继电器"
                                              Click="Switch2_Click" Style="{DynamicResource CheckBoxStyle1}"
                                              IsChecked="{Binding LoadRelay.Value}"/>
                                    <CheckBox Name="Switch3" Content="放电继电器"
                                              Click="Switch3_Click" Style="{DynamicResource CheckBoxStyle1}"
                                              IsChecked="{Binding DisRelay.Value}"/>
                                    <Button Name="ResetButton" Width="55" Content="Reset"
                                            Margin="50,0,0,0"
                                            Click="ResetButton_Click"/>
                                    <Button Name="OpenAC" Content="打开自动控制菜单"
                                            Margin="10,0,0,0"
                                            Click="OpenAC_Click"/>
                                </StackPanel>
                            </Grid>
                        </GroupBox>
                        <GroupBox Header="运行状态参数"
                                  Grid.Row="0" Grid.Column="1" Grid.RowSpan="2"
                                  Margin="5,5,5,5">
                            <ListView Name="StatusListView" ItemsSource="{Binding StatusParasList}"
                                      Grid.Row="0">
                                <ListView.ItemTemplate>
                                    <DataTemplate>
                                        <Grid Margin="0,0,0,0" Width="130">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="0.7*"/>
                                                <ColumnDefinition Width="1.3*"/>
                                            </Grid.ColumnDefinitions>
                                            <Label Content="{Binding Name}" 
                                                   Grid.Column="0" Margin="0,0,0,0"
                                                   HorizontalAlignment="Center"/>
                                            <TextBox Text="{Binding Value}" 
                                                     Grid.Column="1" Margin="0,0,0,0"
                                                     />
                                        </Grid>
                                    </DataTemplate>
                                </ListView.ItemTemplate>
                            </ListView>

                        </GroupBox>
                        <GroupBox Header="指令参数"
                                  Grid.Row="1"
                                  Margin="5,5,5,5"
                                  Name="ParasControlPanelView">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <StackPanel Grid.Row="0" Orientation="Horizontal"
                                            Margin="0,12,0,12"
                                            DataContext="{Binding ControlParasList[0]}">
                                    <Label Content="{Binding Name}"
                                           Width="70"
                                           VerticalAlignment="Center"
                                           HorizontalContentAlignment="Center"/>
                                    <TextBox Text="{Binding Path=Value, StringFormat={}{0:N}}" 
                                             Width="100"
                                             Foreground="{Binding Path=IsValueChanged, Converter={StaticResource GetColor}}"/>
                                    <Button Content="+" Width="30"
                                            Click="ParaPlusButton_Click"/>
                                    <Button Content="-" Width="30"
                                            Click="ParaMinusButton_Click"/>
                                    <TextBox Width="50"
                                             Text="{Binding ValueChangeStep}"/>
                                    <TextBox Text="{Binding Path=ReturnValue, StringFormat={}{0:N}}" 
                                             Width="100"
                                             Margin="50,0,0,0"/>
                                </StackPanel>
                                <StackPanel Grid.Row="1" Orientation="Horizontal"
                                            Margin="0,12,0,12"
                                            DataContext="{Binding ControlParasList[1]}">
                                    <Label Content="{Binding Name}"
                                           Width="70"
                                           VerticalAlignment="Center"
                                           HorizontalContentAlignment="Center"/>
                                    <TextBox Text="{Binding Path=Value, StringFormat={}{0:N}}" 
                                             Width="100"
                                             Foreground="{Binding Path=IsValueChanged, Converter={StaticResource GetColor}}"/>
                                    <Button Content="+" Width="30"
                                            Click="ParaPlusButton_Click"/>
                                    <Button Content="-" Width="30"
                                            Click="ParaMinusButton_Click"/>
                                    <TextBox Width="50"
                                             Text="{Binding ValueChangeStep}"/>
                                    <TextBox Text="{Binding Path=ReturnValue, StringFormat={}{0:N}}" 
                                             Width="100"
                                             Margin="50,0,0,0"/>
                                </StackPanel>
                                <StackPanel Grid.Row="2" Orientation="Horizontal"
                                            Margin="0,12,0,12"
                                            DataContext="{Binding ControlParasList[2]}">
                                    <Label Content="{Binding Name}"
                                           Width="70"
                                           VerticalAlignment="Center"
                                           HorizontalContentAlignment="Center"/>
                                    <TextBox Text="{Binding Path=Value, StringFormat={}{0:N}}" 
                                             Width="100"
                                             Foreground="{Binding Path=IsValueChanged, Converter={StaticResource GetColor}}"/>
                                    <Button Content="+" Width="30"
                                            Click="ParaPlusButton_Click"/>
                                    <Button Content="-" Width="30"
                                            Click="ParaMinusButton_Click"/>
                                    <TextBox Width="50"
                                             Text="{Binding ValueChangeStep}"/>
                                    <TextBox Text="{Binding Path=ReturnValue, StringFormat={}{0:N}}" 
                                             Width="100"
                                             Margin="50,0,0,0"/>
                                </StackPanel>
                                <StackPanel Grid.Row="3" Orientation="Horizontal"
                                            Margin="0,12,0,12"
                                            DataContext="{Binding ControlParasList[3]}">
                                    <Label Content="{Binding Name}"
                                           Width="70"
                                           VerticalAlignment="Center"
                                           HorizontalContentAlignment="Center"/>
                                    <TextBox Text="{Binding Path=Value, StringFormat={}{0:N}}" 
                                             Width="100"
                                             Foreground="{Binding Path=IsValueChanged, Converter={StaticResource GetColor}}"/>
                                    <Button Content="+" Width="30"
                                            Click="ParaPlusButton_Click"/>
                                    <Button Content="-" Width="30"
                                            Click="ParaMinusButton_Click"/>
                                    <TextBox Width="50"
                                             Text="{Binding ValueChangeStep}"/>
                                    <TextBox Text="{Binding Path=ReturnValue, StringFormat={}{0:N}}" 
                                             Width="100"
                                             Margin="50,0,0,0"/>
                                </StackPanel>
                                <StackPanel Grid.Row="4" Orientation="Horizontal"
                                            Margin="0,12,0,12"
                                            HorizontalAlignment="Center">
                                    <CheckBox Name="AutoSendCheckBox"
                                              Margin="5,0,5,0" Width="70"
                                              Content="自动发送"
                                              VerticalAlignment="Center" HorizontalAlignment="Center"
                                              IsChecked="{Binding IsAutoSend}"/>
                                    <Button Content="保存到文件"
                                            Margin="5,0,5,0" Width="70"
                                            Name="ParasPanelSaveButton"
                                            Click="ParasPanelSaveButton_Click"/>
                                    <Button Content="确定" Width="70"
                                            Margin="5,0,5,0"
                                            Name="ParasPanelConfirmButton"
                                            Click="ParasPanelConfirmButton_Click"/>
                                </StackPanel>
                            </Grid>

                        </GroupBox>
                    </Grid>

                </TabItem>
                <TabItem Header="图像"  Visibility="Hidden">

                </TabItem>
                <TabItem Name="LogTable" Header="日志" Visibility="Hidden">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <ListView Name="LogListView" ItemsSource="{Binding Path=LogList}"
                                  Grid.Column="0"
                                  >
                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Log}"/>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>
                        <StackPanel Grid.Column="1" VerticalAlignment="Center"
                                    >
                            <Label Content="发送计数:"/>
                            <TextBlock Name="SendCountView" Text="{Binding SendCount}"
                                       HorizontalAlignment="Right"/>
                            <Label Content="接受计数:"/>
                            <TextBlock Name="ReceiveCountView" Text="{Binding ReceiveCount}"
                                       HorizontalAlignment="Right"/>
                            <Label Content="错误计数:"/>
                            <TextBlock Name="ErrCountView" Text="{Binding ErrCount}"
                                       HorizontalAlignment="Right"/>
                            <CheckBox Name="LogEnable" Content="记录日志"
                                      IsChecked="{Binding IsLogEnable}"
                                      />
                            <Button Name="CleanLogButton" Content="清除"
                                    Click="CleanLogButton_Click"/>
                        </StackPanel>
                    </Grid>
                </TabItem>
            </TabControl>
        </GroupBox>
    </Grid>
</Window>
