<Window x:Class="Monitor2ng.ControlWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:d3="clr-namespace:InteractiveDataDisplay.WPF;assembly=InteractiveDataDisplay.WPF"
        xmlns:local="clr-namespace:Monitor2ng" 
        xmlns:ms="clr-namespace:Monitor2ng.Models"
        xmlns:vms="clr-namespace:Monitor2ng.ViewModels"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="12"
        TextOptions.TextFormattingMode="Ideal"
        TextOptions.TextRenderingMode="Auto"        
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="微软雅黑"
        mc:Ignorable="d"
        d:DataContext="{StaticResource SampleControlVM}"
        Title="{Binding WindowTitle}" Height="580" Width="900" Closing="Window_Closing">
    <Window.Resources>
        <DataTemplate x:Key="CommandItemTemplate">
            <Grid Margin="0,2,0,2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" MinWidth="120"/>
                    <ColumnDefinition Width="0.6*"/>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="0.7*"/>
                </Grid.ColumnDefinitions>
                <Label Content="{Binding Name}" VerticalAlignment="Stretch" VerticalContentAlignment="Center"/>
                <TextBox Text="{Binding Value}" Grid.Column="1" VerticalAlignment="Stretch" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Foreground="{Binding IsValueModified, Converter={StaticResource ValueModificationConverter}}"/>
                <StackPanel Orientation="Horizontal" Grid.Column="2">
                    <Button Content="+" Command="{Binding Mode=OneWay, Source={StaticResource IncreaseCommand}}" CommandParameter="{Binding DataContext, RelativeSource={RelativeSource Self}}" MinWidth="25" Margin="2,0,2,0"/>
                    <Button Content="-" Command="{Binding Mode=OneWay, Source={StaticResource DecreaseCommand}}" CommandParameter="{Binding DataContext, RelativeSource={RelativeSource Self}}" MinWidth="25" Margin="2,0,2,0"/>
                    <TextBox Text="{Binding DeltaStep}" VerticalContentAlignment="Center" MinWidth="42" HorizontalContentAlignment="Center"/>
                </StackPanel>
                <StackPanel Grid.Column="3" Orientation="Horizontal" Margin="10,0,0,0">
                    <Label Content="返回值：" VerticalContentAlignment="Center"/>
                    <Label Content="{Binding ReturnValue}" VerticalContentAlignment="Center"/>
                </StackPanel>
            </Grid>
        </DataTemplate>
        <d:DesignInstance x:Key="TestCommandList" Type="local1:VariableModel"/>
        <SolidColorBrush x:Key="ListBox.Static.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ListBox.Static.Border" Color="#FFABADB3"/>
        <SolidColorBrush x:Key="ListBox.Disabled.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ListBox.Disabled.Border" Color="#FFD9D9D9"/>
        <Style x:Key="ListViewItemContainerStyle1" TargetType="{x:Type ListViewItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                        <Border x:Name="border" Background="Transparent">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="Disabled" />
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="SelectionStates">
                                    <VisualState x:Name="Unselected" />
                                    <VisualState x:Name="Selected"/>
                                    <VisualState x:Name="SelectedUnfocused"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter HorizontalAlignment="Stretch"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" SnapsToDevicePixels="true" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="TabItem.MouseOver.Border" Color="#7EB4EA"/>
        <SolidColorBrush x:Key="TabItem.Selected.Background" Color="White"/>
        <SolidColorBrush x:Key="TabItem.Selected.Border" Color="#ACACAC"/>
        <SolidColorBrush x:Key="TabItem.Disabled.Background" Color="#F0F0F0"/>
        <SolidColorBrush x:Key="TabItem.Disabled.Border" Color="#D9D9D9"/>
        <Style x:Key="TabControlItemContainerStyle1" TargetType="{x:Type TabItem}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Background" Value="{DynamicResource PrimaryHueLightBrush}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueLightBrush}"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Padding" Value="6,2,6,2"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                            <Border x:Name="mainBorder" Background="{TemplateBinding Background}" BorderThickness="1,1,1,0" BorderBrush="{TemplateBinding BorderBrush}" Margin="0">
                                <Border x:Name="innerBorder" Background="{DynamicResource PrimaryHueMidBrush}" BorderThickness="1,1,1,0" BorderBrush="{DynamicResource PrimaryHueMidBrush}" Margin="-1" Opacity="0"/>
                            </Border>
                            <ContentPresenter x:Name="contentPresenter" ContentSource="Header" Focusable="False" HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}">
                                <ContentPresenter.ContentTemplate>
                                    <DataTemplate>
                                        <Label Content="{Binding}" VerticalContentAlignment="Center" HorizontalContentAlignment="Center"/>
                                    </DataTemplate>
                                </ContentPresenter.ContentTemplate>
                            </ContentPresenter>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="mainBorder" Value="{DynamicResource PrimaryHueMidBrush}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{DynamicResource PrimaryHueMidBrush}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="mainBorder" Value="{DynamicResource PrimaryHueMidBrush}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{DynamicResource PrimaryHueMidBrush}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="mainBorder" Value="{DynamicResource PrimaryHueMidBrush}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{DynamicResource PrimaryHueMidBrush}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="mainBorder" Value="{DynamicResource PrimaryHueMidBrush}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{DynamicResource PrimaryHueMidBrush}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                <Setter Property="Background" TargetName="mainBorder" Value="{DynamicResource PrimaryHueMidBrush}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{DynamicResource PrimaryHueMidBrush}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                <Setter Property="Background" TargetName="mainBorder" Value="{DynamicResource PrimaryHueMidBrush}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{DynamicResource PrimaryHueMidBrush}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                <Setter Property="Background" TargetName="mainBorder" Value="{DynamicResource PrimaryHueMidBrush}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{DynamicResource PrimaryHueMidBrush}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                <Setter Property="Background" TargetName="mainBorder" Value="{DynamicResource PrimaryHueMidBrush}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{DynamicResource PrimaryHueMidBrush}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Panel.ZIndex" Value="1"/>
                                <Setter Property="Margin" Value="-2,-2,0,-2"/>
                                <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Panel.ZIndex" Value="1"/>
                                <Setter Property="Margin" Value="-2,0,-2,-2"/>
                                <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Panel.ZIndex" Value="1"/>
                                <Setter Property="Margin" Value="0,-2,-2,-2"/>
                                <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Panel.ZIndex" Value="1"/>
                                <Setter Property="Margin" Value="-2,-2,-2,0"/>
                                <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="TabItem.Selected.Background1" Color="#FFFFFF"/>
        <SolidColorBrush x:Key="TabItem.Selected.Border1" Color="#ACACAC"/>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="Auto" MinWidth="180"/>
        </Grid.ColumnDefinitions>
        <GroupBox Header="运行状态" Grid.Row="0" Grid.Column="1" Grid.RowSpan="2" Margin="5,5,5,5">
            <Grid>
                <DataGrid ItemsSource="{Binding States}" AutoGenerateColumns="False" HeadersVisibility="None">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="状态" Binding="{Binding Name, Mode=OneWay}"/>
                        <DataGridTextColumn Header="值" Binding="{Binding ReturnValue, Mode=OneWay}"/>
                    </DataGrid.Columns>
                </DataGrid>
            </Grid>
        </GroupBox>
        <GroupBox Header="控制面板"
            Grid.Row="2" Grid.Column="0"
                  Margin="5,5,5,5">
            <TabControl BorderBrush="{DynamicResource PrimaryHueMidBrush}" ItemContainerStyle="{DynamicResource TabControlItemContainerStyle1}">
                <TabControl.Background>
                    <ImageBrush/>
                </TabControl.Background>
                <TabItem Header="控制"
                         Name="ControlTabView">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto" MinWidth="180"/>
                        </Grid.ColumnDefinitions>
                        <GroupBox Header="控制"
                                  Grid.Column="0"
                                  Margin="5,5,5,5">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="0.8*"/>
                                    <ColumnDefinition Width="0.8*"/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="0.8*"/>
                                    <ColumnDefinition Width="0.8*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Label Content="运行模式:" HorizontalAlignment="Right" VerticalContentAlignment="Center"/>
                                <ComboBox Name="RunModeSelection"
                                          ItemsSource="{Binding ControlModel.Modes}"
                                          SelectedIndex="{Binding ControlModel.SelectedModeIndex}"
                                          Grid.Column="1"
                                          Grid.ColumnSpan="2"
                                          Margin="20,0,20,0" HorizontalAlignment="Stretch"/>
                                <Button Name="RunModeButton" Content="确定"
                                        Visibility="Hidden"
                                        Grid.Column="2" Margin="10,0,10,0"/>
                                <Button Name="StatusCheckButton" Content="查询" MinWidth="25" MinHeight="20" Grid.Row="1" Margin="5,5,5,5" Command="{Binding QueryStateCommand, Mode=OneWay}"/>
                                <Grid Grid.Row="1" Grid.Column="2" HorizontalAlignment="Center">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <Label Content="自动查询:" HorizontalAlignment="Right" HorizontalContentAlignment="Right"/>
                                    <ToggleButton Grid.Column="1" 
                                              VerticalAlignment="Center" 
                                              HorizontalAlignment="Left"
                                              Visibility="Visible"
                                              IsChecked="{Binding IsAutoCheckEnabled}" Margin="5,2,2,2" HorizontalContentAlignment="Center"/>
                                    <Label Content="自动发送:" Grid.Row="1" HorizontalContentAlignment="Right" HorizontalAlignment="Right"/>
                                    <ToggleButton Grid.Column="1" 
                                              VerticalAlignment="Center" 
                                              HorizontalAlignment="Left"
                                              Visibility="Visible"
                                              IsChecked="{Binding IsAutoSendEnabled}" Margin="5,2,2,2" Grid.Row="1"/>
                                </Grid>
                                <StackPanel Grid.Row="1" Grid.Column="3" Grid.ColumnSpan="2" Orientation="Horizontal" HorizontalAlignment="Center">
                                    <Label Content="连接:"
                                       Grid.Column="1" Grid.Row="1"
                                       HorizontalAlignment="Center" VerticalAlignment="Center" VerticalContentAlignment="Center"/>
                                    <Ellipse Name="ConnectStatusCircle" Width="25" Height="25"
                                         Grid.Row="1" Grid.Column="2"
                                         Margin="5,5,5,5"
                                         VerticalAlignment="Center" Fill="{Binding ConnectionState, Converter={StaticResource ConnectionStateConverter}}"/>
                                    <Label Content="运行:"
                                       Grid.Column="3" Grid.Row="1"
                                       HorizontalAlignment="Center" VerticalAlignment="Center" VerticalContentAlignment="Center"/>
                                    <Ellipse Name="RunStatusCircle" Width="25" Height="25"
                                         Grid.Row="1" Grid.Column="4"
                                         Margin="5,5,5,5"
                                         VerticalAlignment="Center" Fill="{Binding RunState, Converter={StaticResource RunStateConverter}, Mode=OneWay}"/>
                                </StackPanel>
                                <Button Name="MotorStartButton" Content="启动"
                                        Grid.Row="0" Grid.Column="3"
                                        Margin="5,0,5,0" VerticalAlignment="Stretch" Command="{Binding StartControllerCommand, Mode=OneWay}"/>
                                <Button Name="MotorStopButton" Content="停止"
                                        Grid.Row="0" Grid.Column="4"
                                        Margin="5,0,5,0" Command="{Binding StopControllerCommand, Mode=OneWay}"/>
                                <StackPanel Name="SwitchStackPanel" Grid.Row="2" Grid.ColumnSpan="5" Orientation="Horizontal" HorizontalAlignment="Center" />
                                <Grid Grid.Row="2" Grid.ColumnSpan="5" >
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <ListView Grid.Row="0" ItemTemplate="{DynamicResource CommandItemTemplate}" BorderThickness="0,0,0,0" ItemsSource="{Binding Commands}" ItemContainerStyle="{DynamicResource ListViewItemContainerStyle1}" ScrollViewer.VerticalScrollBarVisibility="Auto"/>
                                </Grid>
                                <Button x:Name="StatusCheckButton_Copy" Content="发送" MinWidth="25" MinHeight="20" Grid.Row="1" Grid.Column="1" Margin="5,5,5,5" Command="{Binding SendControlCommand, Mode=OneWay}"/>
                            </Grid>
                        </GroupBox>
                        <GroupBox Header="参数" Margin="5,5,5,5" Grid.Column="1">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <ListView Name="ParasListView" ItemsSource="{Binding Parameters}" Grid.Row="0" ItemContainerStyle="{DynamicResource ListViewItemContainerStyle1}" ScrollViewer.VerticalScrollBarVisibility="Auto" BorderThickness="0,0,0,0">
                                    <ListView.ItemTemplate>
                                        <DataTemplate>
                                            <Grid Margin="0,2,0,2">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="65"/>
                                                    <ColumnDefinition Width="70"/>
                                                </Grid.ColumnDefinitions>
                                                <Label Content="{Binding Name}" Grid.Column="0" HorizontalAlignment="Stretch" VerticalContentAlignment="Center"/>
                                                <TextBox Text="{Binding Value}" Grid.Column="1" VerticalContentAlignment="Center" Margin="0,0,3,0" HorizontalAlignment="Stretch" HorizontalContentAlignment="Center" Foreground="{Binding IsValueModified, Converter={StaticResource ValueModificationConverter}}"/>
                                            </Grid>
                                        </DataTemplate>
                                    </ListView.ItemTemplate>
                                </ListView>
                                <Grid Height="Auto" Grid.Row="1" Margin="0,5,0,5">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <Button Name="UpdateParaListButton" Content="发送" Grid.Column="0" Margin="2,2,5,2" VerticalAlignment="Stretch" Command="{Binding SendParameterCommand, Mode=OneWay}"/>
                                    <Button Name="ReadParaListButton" Content="读取" Grid.Column="1" Margin="5,2,2,2" Command="{Binding QueryParameterCommand, Mode=OneWay}"/>
                                </Grid>
                            </Grid>
                        </GroupBox>
                    </Grid>

                </TabItem>
                <TabItem Name="GraphTabView" Header="图像">
                    <Grid IsEnabled="{Binding IsGraphControlEnabled, Mode=OneWay}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="130"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Label Content="数据：" HorizontalContentAlignment="Center" Padding="5,5,5,0" FontSize="14" Visibility="Collapsed"/>
                        <DataGrid Grid.Row="1" Grid.RowSpan="2" AutoGenerateColumns="False" ItemsSource="{Binding GraphDataModel.DisplayChannelData, Mode=OneWay}">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="序号" Binding="{Binding Item1, Mode=OneWay}" Width="55"/>
                                <DataGridTextColumn Header="值" Binding="{Binding Item2, Mode=OneWay}" Width="65"/>
                            </DataGrid.Columns>
                        </DataGrid>
                        <d3:Chart x:Name="GraphScope" Grid.Column="1" Grid.RowSpan="2" Margin="5,5,5,5">
                            <d3:Chart.Title>
                                <StackPanel Orientation="Horizontal">
                                    <Label Content="{Binding GraphDataModel.SelectedChannel, Mode=OneWay}" HorizontalAlignment="Center"/>
                                    <StackPanel Orientation="Horizontal" Visibility="Collapsed">
                                        <Label Content="(Min:"/>
                                        <Label/>
                                        <Label Content=",Max:"/>
                                        <Label/>
                                        <Label Content="Avg:"/>
                                        <Label/>
                                        <Label Content=")"/>
                                    </StackPanel>
                                </StackPanel>
                            </d3:Chart.Title>
                        </d3:Chart>
                        <Grid Grid.Column="2" Grid.RowSpan="2">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <StackPanel Margin="5,5,5,5">
                                <Label Content="通道" FontSize="14" HorizontalContentAlignment="Center"/>
                                <ComboBox Margin="0,5,0,5" ItemsSource="{Binding GraphDataModel.Channels}" SelectedIndex="{Binding GraphDataModel.SelectedChannelIndex}"/>
                            </StackPanel>
                            <StackPanel Margin="5,5,5,5" Grid.Row="1">
                                <Label Content="采样设置" FontSize="14" HorizontalContentAlignment="Center"/>
                                <Grid Margin="0,5,0,5">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <Label Content="1:"/>
                                    <TextBox Grid.Column="1" Text="{Binding GraphDataModel.SamplingRatio}" HorizontalAlignment="Stretch" HorizontalContentAlignment="Center"/>
                                </Grid>
                                <ComboBox Margin="0,5,0,5" ItemsSource="{Binding GraphDataModel.LogVariables}" SelectedIndex="{Binding GraphDataModel.SelectedLogVariableIndex}"/>
                                <Button Content="确定" Command="{Binding GraphSettingCommand, Mode=OneWay}"/>
                            </StackPanel>
                            <StackPanel Grid.Row="2" HorizontalAlignment="Center" Margin="5,5,5,5">
                                <Label Content="数据操作" FontSize="14" HorizontalContentAlignment="Center"/>
                                <Button Name="ReadGraph" Content="读取数据" Margin="0,5,0,5" Command="{Binding GraphReadCommand, Mode=OneWay}"/>
                                <Button Name="LockGraph" Content="锁定记录" Margin="0,5,0,5"/>
                                <Button Name="UnlockGraph" Content="解锁记录" Margin="0,5,0,5"/>
                                <Button Name="SaveGraphData" Content="保存" Margin="0,5,0,5"/>
                            </StackPanel>
                            <StackPanel Grid.Row="3" HorizontalAlignment="Center" Margin="5,5,5,5" Visibility="Collapsed">
                                <Label Content="图像操作" HorizontalAlignment="Center" FontSize="14"/>
                                <Button Name="GraphScale" Content="自动缩放" Margin="0,5,0,5"/>
                            </StackPanel>
                        </Grid>
                    </Grid>
                </TabItem>
                <TabItem Name="LogTable" Header="日志">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <DataGrid ItemsSource="{Binding LogModel.SentFrames}" AutoGenerateColumns="False">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="帧类型" Binding="{Binding Type}"/>
                                    <DataGridTextColumn Header="帧数据" Binding="{Binding RawData}"/>
                                </DataGrid.Columns>
                            </DataGrid>
                            <DataGrid ItemsSource="{Binding LogModel.ReceivedFrames}" Grid.Row="1" AutoGenerateColumns="False">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="帧类型" Binding="{Binding Type}"/>
                                    <DataGridTextColumn Header="帧数据" Binding="{Binding RawData}"/>
                                </DataGrid.Columns>
                            </DataGrid>
                        </Grid>
                        <StackPanel Grid.Column="1" VerticalAlignment="Center">
                            <Label Content="发送计数:" FontSize="14" Margin="5,5,5,5"/>
                            <TextBlock Name="SendCountView" Text="{Binding LogModel.SendCount}"
                                       HorizontalAlignment="Center" FontSize="14" Margin="5,5,5,5"/>
                            <Label Content="接受计数:" FontSize="14" Margin="5,5,5,5"/>
                            <TextBlock Name="ReceiveCountView" Text="{Binding LogModel.ReceiveCount}"
                                       HorizontalAlignment="Center" FontSize="14" Margin="5,5,5,5"/>
                            <Label Content="错误计数:" FontSize="14" Margin="5,5,5,5"/>
                            <TextBlock Name="ErrCountView" Text="{Binding LogModel.ErrorCount}"
                                       HorizontalAlignment="Center" FontSize="14" Margin="5,5,5,5"/>
                            <StackPanel Orientation="Horizontal">
                                <Label Content="记录" FontSize="14" Margin="2,5,2,5"/>
                                <ToggleButton Margin="2,5,2,5" IsChecked="{Binding LogModel.EnableLog}"/>                                
                            </StackPanel>
                            <Button Name="CleanLogButton" Content="清除" Margin="5,0,5,5" Command="{Binding ClearLogCommand, Mode=OneWay}"/>
                        </StackPanel>
                    </Grid>
                </TabItem>
            </TabControl>
        </GroupBox>
    </Grid>
</Window>
